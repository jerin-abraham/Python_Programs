# -*- coding: utf-8 -*-
"""Set_DS_Programs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17eG4ZOqbrFU9XLz7E1OalEcono0kyffJ
"""

# Empty curly braces will create dictionary  
set3 = {}  
print(type(set3))  
  
# Empty set using set() function  
set4 = set()  
print(type(set4))

Days = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"}    
print(Days)    
print(type(Days))    
print("looping through the set elements ... ")    
for i in Days:    
    print(i)

#frozen sets
Frozenset = frozenset([1,2,3,4,5])     
print(type(Frozenset))    
print("\nprinting the content of frozen set...")    
for i in Frozenset:    
    print(i);    
Frozenset.add(6) #gives an error since we cannot change the content of Frozenset after creation

"""If we pass the dictionary as the sequence inside the frozenset() method, it will take only the keys from the dictionary and returns a frozenset that contains the key of the dictionary as its elements."""

Dictionary = {"Name":"John", "Country":"USA", "ID":101}     
print(type(Dictionary))    
Frozenset = frozenset(Dictionary); #Frozenset will contain the keys of the dictionary    
print(type(Frozenset))    
for i in Frozenset:     
    print(i)

#Example - 1: Write a program to remove the given number from the set.

my_set = {1,2,3,4,5,6,12,24}  
n = int(input("Enter the number you want to remove"))  
my_set.discard(n)  
print("After Removing:",my_set)

#Example - 2: Write a program to add multiple elements to the set.

set1 = set([1,2,4,"John","CS"])  
set1.update(["Apple","Mango","Grapes"])  
print(set1)

#Example - 3: Write a program to find the union between two set.

set1 = set(["Peter","Joseph", 65,59,96])  
set2  = set(["Peter",1,2,"Joseph"])  
set3 = set1.union(set2)  
print(set3)

#Example- 4: Write a program to find the intersection between two sets.

set1 = {23,44,56,67,90,45,"Javatpoint"}  
set2 = {13,23,56,76,"Sachin"}  
set3 = set1.intersection(set2)  
print(set3)

#Example - 5: Write the program to find the issuperset, issubset and superset.

set1 = set(["Peter","James","Camroon","Ricky","Donald"])  
set2 = set(["Camroon","Washington","Peter"])  
set3 = set(["Peter"])  
  
issubset = set1 >= set2  
print(issubset)  
issuperset = set1 <= set2  
print(issuperset)  
issubset = set3 <= set2  
print(issubset)  
issuperset = set2 >= set3  
print(issuperset)

num_set = set([0, 1, 3, 4, 5])
print("Original set:")
print(num_set)
num_set.pop()
print("\nAfter removing the first element from the said set:")
print(num_set)

#Write a Python program to create a union of sets.
setc1 = set(["green", "blue"])
setc2 = set(["blue", "yellow"])
print("Original sets:")
print(setc1)
print(setc2)
setc = setc1.union(setc2)  #two methods of creating union of sets 1.union() method
setp=setc1|setc2            #2.using Pipe(|) symbol
print("\nUnion of above sets:")
print(setc)
print(setp)

#Write a Python program to create set difference
setc1 = set(["green", "blue"])
setc2 = set(["blue", "yellow"])
print("Original sets:")
print(setc1)
print(setc2)
r1 = setc1.difference(setc2)    #two methods of creating difference of sets 1.difference() method          
r2=setc1-setc2                  #2.using minus(-) operator
print("\nDifference of setc1 - setc2:")
print(r1)
print(r2)
r3 = setc2.difference(setc1)
r4=setc2-setc1
print("\nDifference of setc2 - setc1:")
print(r3)
print(r4)

#Write a Python program to create a symmetric difference.
#Write a Python program to create set difference
setc1 = set(["green", "blue"])
setc2 = set(["blue", "yellow"])
print("Original sets:")
print(setc1)
print(setc2)
r1 = setc1.symmetric_difference(setc2)    #two methods of creating symmetric_difference of sets 1.symmetric_difference() method          
r2=setc1^setc2                  #2.using carrot(^) operator
print("\nDifference of setc1 - setc2:")
print(r1)
print(r2)
r3 = setc2.symmetric_difference(setc1)
r4=setc2^setc1
print("\nDifference of setc2 - setc1:")
print(r3)
print(r4)